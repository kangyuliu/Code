/********************归并排序*************************/
//vector版本
void mergeSort(vector<int> & nums){
	mergeSort(nums,0,nums.size()-1);
}

void mergeSort(vector<int> & nums, int left, int right){
	if(left >= right)
		return;
	int mid = (left + right) /2;
	mergeSort(nums, left, mid);
	mergeSort(nums,mid+1, right);
	merge(nums,left,mid,right);
}



void merge(vector<int> & nums, int left, int mid, int right){
	int len = right - left + 1;
	vector<int> tmp(len); //创建临时数组，用于合并数组
	int index=0;
	int i =left;
	int j=right;
	while(i <= mid && j <= right){
		tmp[index++] = nums[i] < nums[j] ? nums[i++] : nums[j++];
	}
	
	while(i<=mid){
		tmp[index++] = nums[i++];
	}
	
	while(j<=right){
		tmp[index++] = nums[j++];
	}
	//copy back
	for(int k=0; k < len; k++){
		nums[left++] = tmp[k];
	}
}